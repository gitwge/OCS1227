//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace LIGHT.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MDCServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MDCService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ImportGEHZShiftDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRunDuringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRunEfficiencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineUseRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineUseRateYCGXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineStatusGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineBootStrapRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStartingUpRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCurrentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentDetailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMachineOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MDCService() {
            this.Url = global::LIGHT.Properties.Settings.Default.LIGHT_WebReference_MDCService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ImportGEHZShiftDataCompletedEventHandler ImportGEHZShiftDataCompleted;
        
        /// <remarks/>
        public event GetRunDuringCompletedEventHandler GetRunDuringCompleted;
        
        /// <remarks/>
        public event GetRunEfficiencyCompletedEventHandler GetRunEfficiencyCompleted;
        
        /// <remarks/>
        public event GetMachineUseRateCompletedEventHandler GetMachineUseRateCompleted;
        
        /// <remarks/>
        public event GetMachineUseRateYCGXCompletedEventHandler GetMachineUseRateYCGXCompleted;
        
        /// <remarks/>
        public event GetMachineStatusGroupCompletedEventHandler GetMachineStatusGroupCompleted;
        
        /// <remarks/>
        public event GetMachineBootStrapRateCompletedEventHandler GetMachineBootStrapRateCompleted;
        
        /// <remarks/>
        public event GetStartingUpRateCompletedEventHandler GetStartingUpRateCompleted;
        
        /// <remarks/>
        public event GetMachineDetailCompletedEventHandler GetMachineDetailCompleted;
        
        /// <remarks/>
        public event GetAllCurrentInfoCompletedEventHandler GetAllCurrentInfoCompleted;
        
        /// <remarks/>
        public event GetCurrentDetailInfoCompletedEventHandler GetCurrentDetailInfoCompleted;
        
        /// <remarks/>
        public event GetAllMachineCompletedEventHandler GetAllMachineCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportGEHZShiftData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportGEHZShiftData() {
            object[] results = this.Invoke("ImportGEHZShiftData", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ImportGEHZShiftDataAsync() {
            this.ImportGEHZShiftDataAsync(null);
        }
        
        /// <remarks/>
        public void ImportGEHZShiftDataAsync(object userState) {
            if ((this.ImportGEHZShiftDataOperationCompleted == null)) {
                this.ImportGEHZShiftDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportGEHZShiftDataOperationCompleted);
            }
            this.InvokeAsync("ImportGEHZShiftData", new object[0], this.ImportGEHZShiftDataOperationCompleted, userState);
        }
        
        private void OnImportGEHZShiftDataOperationCompleted(object arg) {
            if ((this.ImportGEHZShiftDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportGEHZShiftDataCompleted(this, new ImportGEHZShiftDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRunDuring", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetRunDuring(string mtid, System.DateTime startTime, System.DateTime endTime) {
            object[] results = this.Invoke("GetRunDuring", new object[] {
                        mtid,
                        startTime,
                        endTime});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetRunDuringAsync(string mtid, System.DateTime startTime, System.DateTime endTime) {
            this.GetRunDuringAsync(mtid, startTime, endTime, null);
        }
        
        /// <remarks/>
        public void GetRunDuringAsync(string mtid, System.DateTime startTime, System.DateTime endTime, object userState) {
            if ((this.GetRunDuringOperationCompleted == null)) {
                this.GetRunDuringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRunDuringOperationCompleted);
            }
            this.InvokeAsync("GetRunDuring", new object[] {
                        mtid,
                        startTime,
                        endTime}, this.GetRunDuringOperationCompleted, userState);
        }
        
        private void OnGetRunDuringOperationCompleted(object arg) {
            if ((this.GetRunDuringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRunDuringCompleted(this, new GetRunDuringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRunEfficiency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRunEfficiency(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            object[] results = this.Invoke("GetRunEfficiency", new object[] {
                        startTime,
                        endTime,
                        strMachineId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRunEfficiencyAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            this.GetRunEfficiencyAsync(startTime, endTime, strMachineId, null);
        }
        
        /// <remarks/>
        public void GetRunEfficiencyAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId, object userState) {
            if ((this.GetRunEfficiencyOperationCompleted == null)) {
                this.GetRunEfficiencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRunEfficiencyOperationCompleted);
            }
            this.InvokeAsync("GetRunEfficiency", new object[] {
                        startTime,
                        endTime,
                        strMachineId}, this.GetRunEfficiencyOperationCompleted, userState);
        }
        
        private void OnGetRunEfficiencyOperationCompleted(object arg) {
            if ((this.GetRunEfficiencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRunEfficiencyCompleted(this, new GetRunEfficiencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineUseRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMachineUseRate(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            object[] results = this.Invoke("GetMachineUseRate", new object[] {
                        startTime,
                        endTime,
                        strMachineId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineUseRateAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            this.GetMachineUseRateAsync(startTime, endTime, strMachineId, null);
        }
        
        /// <remarks/>
        public void GetMachineUseRateAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId, object userState) {
            if ((this.GetMachineUseRateOperationCompleted == null)) {
                this.GetMachineUseRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineUseRateOperationCompleted);
            }
            this.InvokeAsync("GetMachineUseRate", new object[] {
                        startTime,
                        endTime,
                        strMachineId}, this.GetMachineUseRateOperationCompleted, userState);
        }
        
        private void OnGetMachineUseRateOperationCompleted(object arg) {
            if ((this.GetMachineUseRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineUseRateCompleted(this, new GetMachineUseRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineUseRateYCGX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMachineUseRateYCGX(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            object[] results = this.Invoke("GetMachineUseRateYCGX", new object[] {
                        startTime,
                        endTime,
                        strMachineId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineUseRateYCGXAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            this.GetMachineUseRateYCGXAsync(startTime, endTime, strMachineId, null);
        }
        
        /// <remarks/>
        public void GetMachineUseRateYCGXAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId, object userState) {
            if ((this.GetMachineUseRateYCGXOperationCompleted == null)) {
                this.GetMachineUseRateYCGXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineUseRateYCGXOperationCompleted);
            }
            this.InvokeAsync("GetMachineUseRateYCGX", new object[] {
                        startTime,
                        endTime,
                        strMachineId}, this.GetMachineUseRateYCGXOperationCompleted, userState);
        }
        
        private void OnGetMachineUseRateYCGXOperationCompleted(object arg) {
            if ((this.GetMachineUseRateYCGXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineUseRateYCGXCompleted(this, new GetMachineUseRateYCGXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineStatusGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMachineStatusGroup(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            object[] results = this.Invoke("GetMachineStatusGroup", new object[] {
                        startTime,
                        endTime,
                        strMachineId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineStatusGroupAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            this.GetMachineStatusGroupAsync(startTime, endTime, strMachineId, null);
        }
        
        /// <remarks/>
        public void GetMachineStatusGroupAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId, object userState) {
            if ((this.GetMachineStatusGroupOperationCompleted == null)) {
                this.GetMachineStatusGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineStatusGroupOperationCompleted);
            }
            this.InvokeAsync("GetMachineStatusGroup", new object[] {
                        startTime,
                        endTime,
                        strMachineId}, this.GetMachineStatusGroupOperationCompleted, userState);
        }
        
        private void OnGetMachineStatusGroupOperationCompleted(object arg) {
            if ((this.GetMachineStatusGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineStatusGroupCompleted(this, new GetMachineStatusGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineBootStrapRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMachineBootStrapRate(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            object[] results = this.Invoke("GetMachineBootStrapRate", new object[] {
                        startTime,
                        endTime,
                        strMachineId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineBootStrapRateAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            this.GetMachineBootStrapRateAsync(startTime, endTime, strMachineId, null);
        }
        
        /// <remarks/>
        public void GetMachineBootStrapRateAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId, object userState) {
            if ((this.GetMachineBootStrapRateOperationCompleted == null)) {
                this.GetMachineBootStrapRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineBootStrapRateOperationCompleted);
            }
            this.InvokeAsync("GetMachineBootStrapRate", new object[] {
                        startTime,
                        endTime,
                        strMachineId}, this.GetMachineBootStrapRateOperationCompleted, userState);
        }
        
        private void OnGetMachineBootStrapRateOperationCompleted(object arg) {
            if ((this.GetMachineBootStrapRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineBootStrapRateCompleted(this, new GetMachineBootStrapRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStartingUpRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStartingUpRate(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            object[] results = this.Invoke("GetStartingUpRate", new object[] {
                        startTime,
                        endTime,
                        strMachineId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStartingUpRateAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId) {
            this.GetStartingUpRateAsync(startTime, endTime, strMachineId, null);
        }
        
        /// <remarks/>
        public void GetStartingUpRateAsync(System.DateTime startTime, System.DateTime endTime, string strMachineId, object userState) {
            if ((this.GetStartingUpRateOperationCompleted == null)) {
                this.GetStartingUpRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStartingUpRateOperationCompleted);
            }
            this.InvokeAsync("GetStartingUpRate", new object[] {
                        startTime,
                        endTime,
                        strMachineId}, this.GetStartingUpRateOperationCompleted, userState);
        }
        
        private void OnGetStartingUpRateOperationCompleted(object arg) {
            if ((this.GetStartingUpRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStartingUpRateCompleted(this, new GetStartingUpRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMachineDetail(System.DateTime startTime, System.DateTime endTime, string matolId) {
            object[] results = this.Invoke("GetMachineDetail", new object[] {
                        startTime,
                        endTime,
                        matolId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineDetailAsync(System.DateTime startTime, System.DateTime endTime, string matolId) {
            this.GetMachineDetailAsync(startTime, endTime, matolId, null);
        }
        
        /// <remarks/>
        public void GetMachineDetailAsync(System.DateTime startTime, System.DateTime endTime, string matolId, object userState) {
            if ((this.GetMachineDetailOperationCompleted == null)) {
                this.GetMachineDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineDetailOperationCompleted);
            }
            this.InvokeAsync("GetMachineDetail", new object[] {
                        startTime,
                        endTime,
                        matolId}, this.GetMachineDetailOperationCompleted, userState);
        }
        
        private void OnGetMachineDetailOperationCompleted(object arg) {
            if ((this.GetMachineDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineDetailCompleted(this, new GetMachineDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCurrentInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllCurrentInfo() {
            object[] results = this.Invoke("GetAllCurrentInfo", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCurrentInfoAsync() {
            this.GetAllCurrentInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCurrentInfoAsync(object userState) {
            if ((this.GetAllCurrentInfoOperationCompleted == null)) {
                this.GetAllCurrentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCurrentInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllCurrentInfo", new object[0], this.GetAllCurrentInfoOperationCompleted, userState);
        }
        
        private void OnGetAllCurrentInfoOperationCompleted(object arg) {
            if ((this.GetAllCurrentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCurrentInfoCompleted(this, new GetAllCurrentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentDetailInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCurrentDetailInfo(string machineName) {
            object[] results = this.Invoke("GetCurrentDetailInfo", new object[] {
                        machineName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentDetailInfoAsync(string machineName) {
            this.GetCurrentDetailInfoAsync(machineName, null);
        }
        
        /// <remarks/>
        public void GetCurrentDetailInfoAsync(string machineName, object userState) {
            if ((this.GetCurrentDetailInfoOperationCompleted == null)) {
                this.GetCurrentDetailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentDetailInfoOperationCompleted);
            }
            this.InvokeAsync("GetCurrentDetailInfo", new object[] {
                        machineName}, this.GetCurrentDetailInfoOperationCompleted, userState);
        }
        
        private void OnGetCurrentDetailInfoOperationCompleted(object arg) {
            if ((this.GetCurrentDetailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentDetailInfoCompleted(this, new GetCurrentDetailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMachine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllMachine() {
            object[] results = this.Invoke("GetAllMachine", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMachineAsync() {
            this.GetAllMachineAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMachineAsync(object userState) {
            if ((this.GetAllMachineOperationCompleted == null)) {
                this.GetAllMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMachineOperationCompleted);
            }
            this.InvokeAsync("GetAllMachine", new object[0], this.GetAllMachineOperationCompleted, userState);
        }
        
        private void OnGetAllMachineOperationCompleted(object arg) {
            if ((this.GetAllMachineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMachineCompleted(this, new GetAllMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ImportGEHZShiftDataCompletedEventHandler(object sender, ImportGEHZShiftDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportGEHZShiftDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportGEHZShiftDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRunDuringCompletedEventHandler(object sender, GetRunDuringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRunDuringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRunDuringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetRunEfficiencyCompletedEventHandler(object sender, GetRunEfficiencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRunEfficiencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRunEfficiencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMachineUseRateCompletedEventHandler(object sender, GetMachineUseRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineUseRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineUseRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMachineUseRateYCGXCompletedEventHandler(object sender, GetMachineUseRateYCGXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineUseRateYCGXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineUseRateYCGXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMachineStatusGroupCompletedEventHandler(object sender, GetMachineStatusGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineStatusGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineStatusGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMachineBootStrapRateCompletedEventHandler(object sender, GetMachineBootStrapRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineBootStrapRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineBootStrapRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStartingUpRateCompletedEventHandler(object sender, GetStartingUpRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStartingUpRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStartingUpRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMachineDetailCompletedEventHandler(object sender, GetMachineDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllCurrentInfoCompletedEventHandler(object sender, GetAllCurrentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCurrentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCurrentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCurrentDetailInfoCompletedEventHandler(object sender, GetCurrentDetailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentDetailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentDetailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllMachineCompletedEventHandler(object sender, GetAllMachineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591